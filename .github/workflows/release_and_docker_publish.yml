name: Release and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Extract version from label
        id: extract_version
        run: |
          LABEL=$(jq -r '.pull_request.labels | map(.name) | join(",")' $GITHUB_EVENT_PATH)
          if [[ $LABEL == *"major"* ]]; then
            VERSION=$(git describe --tags --abbrev=0 | awk -F. '{$1+=1; $2=0; $3=0; print $1"."$2"."$3}')
          elif [[ $LABEL == *"minor"* ]]; then
            VERSION=$(git describe --tags --abbrev=0 | awk -F. '{$2+=1; $3=0; print $1"."$2"."$3}')
          elif [[ $LABEL == *"patch"* ]]; then
            VERSION=$(git describe --tags --abbrev=0 | awk -F. '{$3+=1; print $1"."$2"."$3}')
          else
            echo "No valid semantic versioning label found."
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create new release
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

  build-and-push:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/podcast-generator:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/podcast-generator:${{ env.VERSION }}
