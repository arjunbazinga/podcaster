name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version
        id: get_latest_version
        run: |
          LATEST_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Get merged PR number
        id: get_pr_number
        run: |
          PR_NUMBER=$(git log -1 --pretty=%B | grep -oP '#\K\d+' || echo "")
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Get PR labels
        id: get_pr_labels
        if: steps.get_pr_number.outputs.PR_NUMBER != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_LABELS=$(gh pr view ${{ steps.get_pr_number.outputs.PR_NUMBER }} --json labels --jq '.labels[].name')
          echo "PR_LABELS=$PR_LABELS" >> $GITHUB_OUTPUT

      - name: Determine new version
        id: new_version
        run: |
          LATEST_VERSION=${{ steps.get_latest_version.outputs.LATEST_VERSION }}
          PR_LABELS=${{ steps.get_pr_labels.outputs.PR_LABELS }}
          
          IFS='.' read -ra VERSION_PARTS <<< "$LATEST_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          if echo "$PR_LABELS" | grep -q "major"; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif echo "$PR_LABELS" | grep -q "minor"; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          elif echo "$PR_LABELS" | grep -q "patch"; then
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.new_version.outputs.NEW_VERSION }} \
            --title "Release v${{ steps.new_version.outputs.NEW_VERSION }}" \
            --notes "Release v${{ steps.new_version.outputs.NEW_VERSION }}"
